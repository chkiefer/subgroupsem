% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subgroupsem.R
\name{subgroupsem}
\alias{subgroupsem}
\title{Function \code{subgroupsem()}.}
\usage{
subgroupsem(
  f_fit,
  dat,
  columns = names(dat),
  ignore = NULL,
  max_n_subgroups = 10,
  search_depth = 3,
  min_quality = 0,
  weighting_attr = NULL,
  generalization_aware = TRUE,
  na_rm = FALSE,
  ...
)
}
\arguments{
\item{f_fit}{Function to be fitted. Must take at least two arguments. 
\code{f_fit} has the signature \code{function(group, dat, ...)}. \code{group} 
is a numeric vector. The length of this vector equals the rows in the data 
frame \code{dat} and is to be interpreted as an additional column indicating 
the group assignment. \code{f_fit} returns the interestingness measure. 
Returned values should be greater than \code{min_quality} in case of sucess
and smaller in case of failure (e.g., non-convergence, error).}

\item{dat}{A data frame.}

\item{columns}{Column names of the provided data frame which are to be 
analysed. Columns must have ordinal or nominal scale.}

\item{ignore}{Optional argument. If \code{columns = NULL}, \code{ignore} will 
be used to select every column that is not in ignore.}

\item{max_n_subgroups}{Maximum number of subgroups. Default is 10.}

\item{search_depth}{Maximum number of attribute combinations. Default is 3.}

\item{min_quality}{Minimum value of interestingness measure. Values below 
will not be considered. Default is 0.}

\item{weighting_attr}{Column name of a weighting attribute. Default is NULL 
(disabled). Not implemented yet.}

\item{generalization_aware}{Boolean. If specified, redundancy reduction is 
used. Default is TRUE.}

\item{na_rm}{Boolean. Default is FALSE. If set to TRUE, cases with NA values on any column 
will be set to FALSE in the \code{sg} vector. If set to FALSE, the regarding 
in the \code{sg} vector will be also \code{NA}.}

\item{...}{Additional arguments to be passed to \code{f_fit}.}
}
\value{
List containing the time consumed and the groups.
}
\description{
Interface to the python module pysubgroup for efficiently 
finding subgroups.
}
\examples{
if (FALSE){
library(EffectLiteR)

dat <- read.csv(system.file("extdata", 
                            "data_kirchmann.csv", 
                            package="subgroupsem"))

# columns <- names(dat)[!(names(dat) \%in\% c("ind", "CESD_3", "CESD_1", "x"))]
columns <- c("Educ_d1", "Educ_d2", "Educ_d3", "Educ_d4")

f_fit <- function(sg, dat) {
    dat <- dat[sg == 1, ]
    
    res <- tryCatch({
        fit <- effectLite(y="CESD_3", x="x", data=dat)
        abs(fit@results@Egx[[1]])
    }, error = function(e) -1)

    return(res)
}

task <- subgroupsem(f_fit = f_fit,
                    dat = dat,
                    columns = columns)

summary(task)

plot(task)
}

}
